{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","display","padding","spacing","textAlign","width","height","borderColor","color","palette","text","secondary","date","media","paddingTop","box","bgcolor","m","border","style","defaultProps","App","classes","useEffect","fetchItems","useState","items","setItems","a","fetch","data","json","className","Grid","container","map","item","index","Box","Paper","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAAS,QACTC,QAASL,EAAMM,QAAQ,GACvBC,UAAW,SACXC,MAAO,IACPC,OAAQ,IACRC,YAAa,UACbC,MAAOX,EAAMY,QAAQC,KAAKC,WAG5BC,KAAM,CACJJ,MAAO,OAETK,MAAO,CACLR,MAAO,OACPS,WAAY,QAEdC,IAAK,CACHC,QAAS,mBACTC,EAAG,EACHC,OAAQ,EACRC,MAAO,CAAEd,MAAO,OAAQC,OAAQ,aAI9Bc,EAAe,CACnBJ,QAAS,UACTC,EAAG,EACHC,OAAQ,GAqCKG,MAnCf,WAEE,IAAMC,EAAU3B,IAChB4B,qBAAU,WACRC,MACC,IACH,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMH,EAAU,uCAAG,8BAAAI,EAAA,sEACEC,MAAM,6CADR,cACXC,EADW,gBAEGA,EAAKC,OAFR,OAEXL,EAFW,OAGjBC,EAASD,GAHQ,2CAAH,qDAOhB,OACE,sBAAKM,UAAU,MAAf,UACG,mDACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,SAEMR,EAAMS,KAAI,SAACC,EAAMC,GAAP,OAET,cAACC,EAAA,EAAD,yBAAK/B,YAAY,gBAAmBa,GAApC,aACA,cAACa,EAAA,EAAD,UACE,cAACM,EAAA,EAAD,CAAOP,UAAWV,EAAQtB,MAA1B,SACA,6BAAkBoC,EAAKI,MAAdH,mBCxDVI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.727a42cf.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Badge from '@material-ui/core/Badge';\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    display: 'block',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    width: 250,\n    height: 100,\n    borderColor: 'primary',\n    color: theme.palette.text.secondary,\n    \n  },\n  date: {\n    color: 'red'\n  },\n  media: {\n    width: 'auto',\n    paddingTop: '100%', // 16:9\n  },\n  box: {\n    bgcolor: 'background.paper',\n    m: 1,\n    border: 1,\n    style: { width: '5rem', height: '5rem' },\n  }\n}));\n\nconst defaultProps = {\n  bgcolor: 'primary',\n  m: 1,\n  border: 2,\n};\nfunction App() {\n  \n  const classes = useStyles();\n  useEffect(()=> {\n    fetchItems(); \n  }, []);\n  const [items, setItems] = useState([]);\n  const fetchItems = async () => {\n    const data = await fetch('https://api.github.com/users/Grezor/repos');\n    const items = await data.json();\n    setItems(items);\n  }\n\n  const repo = false\n  return (\n    <div className=\"App\">\n       <h1>Github repository</h1>\n       <Grid container>\n        \n            {items.map((item, index) => (\n              \n              <Box borderColor=\"primary.main\" {...defaultProps} >\n              <Grid>\n                <Paper className={classes.paper} >\n                <h3 key={index} >{item.name}</h3>\n            \n               </Paper>\n               </Grid>\n              </Box>\n            ))}\n        </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}